 Partioning:

 create table grades_org(id serial not null, g int not null);
 insert into grades_org(g) select floor(random()*100) from generate_series ( 0,10000000);
 create index grades_org_index on grades_org(g);


 create table grades_parts ( id serial not null, g int not null) partition by range(g);


 postgres=# create table g0035 ( like grades_parts including indexes);
 CREATE TABLE
 postgres=# create table g3560 ( like grades_parts including indexes);
 CREATE TABLE
 postgres=# create table g6080 ( like grades_parts including indexes);
 CREATE TABLE
 postgres=# create table g80100 ( like grades_parts including indexes);
 CREATE TABLE

postgres=# alter table grades_parts attach partition g0035 for values from (0) to (35);
ALTER TABLE
postgres=#  alter table grades_parts attach partition g3560 for values from (35) to (60);
ALTER TABLE
postgres=#  alter table grades_parts attach partition g6080 for values from (60) to (80);
ALTER TABLE
postgres=#  alter table grades_parts attach partition g80100 for values from (80) to (100);
ALTER TABLE
postgres=# \d grades_parts
                      Partitioned table "public.grades_parts"
 Column |  Type   | Collation | Nullable |                 Default
--------+---------+-----------+----------+------------------------------------------
 id     | integer |           | not null | nextval('grades_parts_id_seq'::regclass)
 g      | integer |           | not null |
Partition key: RANGE (g)
Number of partitions: 4 (Use \d+ to list them.)



postgres=# insert into grades_parts select * from grades_org;
INSERT 0 10000001


select max(g) from grades_parts;
 select max(g) from g0035;

 postgres=# create index grades_parts_idx on grades_parts(g);
 CREATE INDEX

-- INDEX created on all partitions.



postgres=# select pg_relation_size (oid), relname from pg_class order by pg_relation_size(oid) desc;

-- check the size in bytes of tables/indexes.



